(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.i=function(value){return value};__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{configurable:false,enumerable:true,get:getter})}};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=0)})([function(module,exports){AFRAME.registerComponent("spin-frames",{schema:{folder:{type:"string"},sensitivity:{default:3.2},frameIndex:{type:"number",default:24},clickToSpin:{type:"boolean",default:false},loading:{default:true},enabled:{default:true},initTick:{type:"boolean",default:false}},init:function(){this.textures=[];this.IMAGECOUNT=36;this.FRAMES=88;this.COUNTER=2112;this.startX=0;this.lookVector=new THREE.Vector2;this.mouseDown=false;this.touchDown=false;this.bindMethods()},update:function(){this.loadImages();this.updateMeshTexture(this.data.frameIndex)},play:function(){this.addEventListeners()},pause:function(){this.removeEventListeners();this.lookVector.set(0,0)},remove:function(){this.pause()},bindMethods:function(){this.onMouseDown=this.onMouseDown.bind(this);this.onMouseMove=this.onMouseMove.bind(this);this.onMouseUp=this.onMouseUp.bind(this);this.onTouchStart=this.onTouchStart.bind(this);this.onTouchMove=this.onTouchMove.bind(this);this.onTouchEnd=this.onTouchEnd.bind(this)},addEventListeners:function(){const canvasEl=this.el.sceneEl.canvas;canvasEl.addEventListener("mousedown",this.onMouseDown,false);canvasEl.addEventListener("mousemove",this.onMouseMove,false);canvasEl.addEventListener("mouseup",this.onMouseUp,false);canvasEl.addEventListener("touchstart",this.onTouchStart,false);canvasEl.addEventListener("touchmove",this.onTouchMove,false);canvasEl.addEventListener("touchend",this.onTouchEnd,false)},removeEventListeners:function(){const canvasEl=this.el.sceneEl&&this.el.sceneEl.canvas;if(canvasEl){canvasEl.removeEventListener("mousedown",this.onMouseDown);canvasEl.removeEventListener("mousemove",this.onMouseMove);canvasEl.removeEventListener("mouseup",this.onMouseUp);canvasEl.removeEventListener("touchstart",this.onTouchStart);canvasEl.removeEventListener("touchmove",this.onTouchMove);canvasEl.removeEventListener("touchend",this.onTouchEnd)}},tick:function(time,delta){if(this.data.initTick){this.updateImageByFrame(time,delta)}},loadImages:function(){this.textures=[];const loader=new THREE.TextureLoader;for(let i=0;i<this.IMAGECOUNT;i++){this.textures.push(loader.load(`${this.data.folder+i}.png`))}},updateMeshTexture:function(index){const mesh=this.el.getObject3D("mesh");if(!mesh||!mesh.material)return;mesh.material.map=this.textures[index]},updateImageByFrame:function(time,delta){if(!this.data.clickToSpin){this.COUNTER+=Math.round(time);this.data.frameIndex=(Math.round(this.COUNTER*(1/this.FRAMES))%this.IMAGECOUNT+this.IMAGECOUNT)%this.IMAGECOUNT}else{this.COUNTER+=Math.round(delta);this.data.frameIndex=Math.round(this.COUNTER*(1/this.FRAMES))%this.IMAGECOUNT}this.updateMeshTexture(this.data.frameIndex)},isRotationActive:function(){return this.data.enabled&&(this.mouseDown||this.touchDown)},rotateObject:function(clientX){if(clientX===this.startX)return;const currentX=clientX;let direction=1;if(currentX>this.startX){direction=-1}const amountMoved=Math.abs(currentX-this.startX)*direction*this.data.sensitivity;this.updateImageByFrame(amountMoved);this.startX=currentX},onMouseMove:function(event){if(!this.data.enabled||!this.mouseDown||this.data.clickToSpin)return;const previousMouseEvent=this.previousMouseEvent;let movementX;movementX=event.movementX||event.mozMovementX||0;if(movementX===undefined){movementX=event.screenX-previousMouseEvent.screenX}this.previousMouseEvent=event;if(this.isRotationActive()){this.lookVector.x+=movementX;this.rotateObject(this.lookVector.x)}},onMouseDown:function(event){this.mouseDown=true;this.previousMouseEvent=event},onMouseUp:function(){this.mouseDown=false;if(!this.data.clickToSpin)return;this.data.initTick?this.data.initTick=false:this.data.initTick=true},onTouchMove:function(event){if(!this.data.enabled||!this.touchDown)return;const previousTouchEvent=this.previousTouchEvent;const touch=event.touches[0];const movementX=touch.screenX-previousTouchEvent.touches[0].screenX;this.previousTouchEvent=event;if(this.isRotationActive()){this.lookVector.x+=movementX;this.rotateObject(this.lookVector.x)}},onTouchStart:function(event){this.touchDown=true;this.previousTouchEvent=event},onTouchEnd:function(){this.touchDown=false}})}]);
